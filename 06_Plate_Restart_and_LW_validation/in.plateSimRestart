### Launcher Simulation
### This simulation involves inserting a set of particles into a bucket,
### allowing them to settle under the force of gravity, and then accelerating


### Variables ----------------------------------------------------------------------------------------

variable youngmod equal 1.0e7
variable poisson equal 0.3
variable crest equal 0.65
variable cfric equal 1
variable rho equal 3110

variable nmaterials equal 2

variable nP equal 20000
variable tStep equal 1.0e-4
variable prate equal 9000
variable tSettle equal ${nP}/${prate}/${tStep}+1/${tStep}

print "tSettle = ${tSettle}"

variable minRad equal 0.01
variable ndist equal 2*${minRad}

variable rcyl equal 0.35
variable zbottom equal -0.5
variable ztop equal 0.6

variable fdump equal 1000


### Initialization -----------------------------------------------------------------------------------

units si
atom_style sphere
atom_modify map array
boundary f f f
newton off
communicate single vel yes

read_restart restart/restart.equil

# Neighbor listing
neighbor ${ndist} bin
neigh_modify every 1 check no delay 0

### Setup -------------------------------------------------------------------------------------------

# Material and interaction properties required
fix m1 all property/global youngsModulus peratomtype ${youngmod} ${youngmod}
fix m2 all property/global poissonsRatio peratomtype ${poisson} ${poisson}
fix m3 all property/global coefficientRestitution peratomtypepair 2 ${crest} ${crest} ${crest} ${crest}
fix m4 all property/global coefficientFriction peratomtypepair 2 ${cfric} 0 0 ${cfric}
fix m5 all property/global cohesionEnergyDensity peratomtypepair 2 100 0 0 100
fix m6 all property/global coefficientRollingFriction peratomtypepair 2 0.04 0.04 0.04 0.04

# Particle insertion

# removed

region reservoir cylinder z 0 0 ${rcyl} 0 ${ztop} units box

# removed


# Define the physics
pair_style gran model hertz tangential history cohesion sjkr
pair_coeff * *


### Import CAD / Generate Solids --------------------------------------------------------------------

fix cad1 all mesh/surface/stress file simple_plate.STL type 2 move -0.068 0 0.1 stress on

# Use the imported mesh as granular wall
fix geometry all wall/gran model hertz tangential history mesh n_meshes 1 meshes cad1

variable time equal step*dt
variable fx equal f_cad1[1]
variable fy equal f_cad1[2]
variable fz equal f_cad1[3]
variable Mx equal f_cad1[4]
variable My equal f_cad1[5]
variable Mz equal f_cad1[6]

# Add a granular wall at the floor of the bounding box too
fix zwalls all wall/gran model hertz tangential history primitive type 1 zplane ${zbottom}
fix cylwall all wall/gran model hertz tangential history primitive type 1 zcylinder ${rcyl} 0 0 

### Detailed Settings -------------------------------------------------------------------------------

# Integrator
fix integrator all nve/sphere

# Gravity
fix grav all gravity 9.81e-06 vector 0.0 0.0 -1.0

# Time step
timestep ${tStep}

### Thermodynamic output settings
# none

# Check time step and initialize dump file
fix ctg all check/timestep/gran 1 0.01 0.01
run 1
unfix ctg

# Dump Files for Post-Processing --------------------------------------------------------------------

dump dumpstl all stl ${fdump} post/cad_*.stl
dump dmp all custom/vtk ${fdump} post/plate_*.vtk id type type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius 
dump forces1 all mesh/vtk ${fdump} post/stress_*.vtk output interpolate stress stresscomponents cad1

fix forceslog all print 200 "${time},${fx},${fy},${fz},${Mx},${My},${Mz}" file post/forces.csv &
title "t,Fx,Fy,Fz,Mx,My,Mz" screen no


# Run simulation for N time steps ------------------------------------------------------------------


# Move scoop into regolith surface
fix moveCad all move/mesh mesh cad1 linear 0 0 -0.2

run 20000

# Stop CAD motion
unfix moveCad